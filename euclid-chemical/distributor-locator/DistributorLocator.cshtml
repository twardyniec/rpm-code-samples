@*This file is managed in a solution*@ 
@using Euclid7.Models
@using Euclid7.Controllers
@using umbraco.NodeFactory
@using Umbraco;
@using umbraco;
@model DistributorParameters
@{
	Layout = null;
	Node CurrentPage = Node.GetCurrent();
	int id = 1;
}
<script src="https://cdn.rawgit.com/googlemaps/v3-utility-library/master/markerwithlabel/src/markerwithlabel.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=geometry,places&ext=.js"></script>
<div class="container distributor">
	@using (Html.BeginUmbracoForm<LocatorSurfaceController>("GetDistributorResults", "LocatorSurface", new { @class = "form-horizontal", role = "form" }))
	{
		<div class="row padding-40">
			<div class="col-md-6 col-lg-8 line-20 dist_search">
				<div class="text-align-center line-20">
					<p>@Html.Raw(CurrentPage.GetProperty("bodyText") == null ? "" : CurrentPage.GetProperty("bodyText").ToString())</p>
				</div>

				<div class="border-grey">
					<div class="row">
						
						<div class="col-md-12">


							<div class="line-20">
								<a><h2 class="banner_full-green">@(CurrentPage.GetProperty("searchByTextOverride") != null ? CurrentPage.GetProperty("searchByTextOverride").ToString() : "Search By")</h2></a>
							</div>
						</div>
					</div>
					<div class="row padding">
						@*<div class="col-lg-4 line-20 ">
							@Html.TextBoxFor(model => model.City, new { @class = "width-full", @type = "text", @placeholder = (CurrentPage.GetProperty("cityPlaceholderOverride") != null ? CurrentPage.GetProperty("cityPlaceholderOverride").ToString() : "City") })
						</div>*@
						<div id="selectDiv1" class="col-lg-4 line-20 clearfix">
							@Html.DropDownListFor(model => model.State, Model.States, (CurrentPage.GetProperty("statePlaceholderOverride") != null ? CurrentPage.GetProperty("statePlaceholderOverride").ToString() : "State"), new { @class = "present", @data_jcf = "{\"wrapNative\": false, \"wrapNativeOnMobile\": false}", onchange = "this.form.submit();" })
						</div>
						<div class=" col-md-2 col-lg-2 line-20 text-align-center">
							<h4>@(CurrentPage.GetProperty("orText") != null ? CurrentPage.GetProperty("orText").ToString() : "OR")</h4>
						</div>
						<div class="col-md-10 col-lg-4 line-20 ">
							@Html.TextBoxFor(model => model.ZipCode, new { @class = "width-full", @type = "text", @placeholder = (CurrentPage.GetProperty("zipPlaceholderOverride") != null ? CurrentPage.GetProperty("zipPlaceholderOverride").ToString() : "Zip Code") })
							<div class="text-align-center line-20 text-danger">
								@Html.ValidationMessageFor(model => model.ZipCode)
							</div>
						</div>
						<div><button type="submit" class="button button-orange line-20">@(CurrentPage.GetProperty("searchButtonTextOverride") != null ? CurrentPage.GetProperty("searchButtonTextOverride").ToString() : "Search")</button><span> </span></div>
					</div>
					<div class="text-align-center line-20 text-danger">
						@(TempData["error"] != null ? TempData["error"].ToString() : "")
					</div>
				</div>
			</div>
			@*<div class="col-md-6 col-lg-4 line-20">
					<div class="border-grey">
						<div class="row">
							<div class="col-xs-12">
								<div class="line-20">
									<h2 class="banner_full-green">Optional Filters</h2>
								</div>
							</div>

							<div class="col-xs-12 distributor_toggle">
								<div class="row padding line-20">
									<div class="col-xs-6  border">
										<table class="width-full">
											<tr>
												<td><img class="center-block" src="/images/logo_euclid.png"></td>
												<td>
													<label class="switch">
														<input type="checkbox" checked>
														<span class="slider round"></span>
													</label>
												</td>
											</tr>
										</table>
									</div>

									<divl class="col-xs-6">
										<table class="width-full">
											<tr>
												<td><img class="center-block" src="/images/logo_increte.png"></td>
												<td>
													<label class="switch">
														<input type="checkbox" checked>
														<span class="slider round"></span>
													</label>
												</td>
											</tr>
										</table>
									</divl>
								</div>
							</div>
						</div>
					</div>
				</div>*@
		</div>
	}

	@if (Convert.ToBoolean(TempData["resultsFlag"]) && Session["distributors"] == null)
	{
		<div class="row line-40">
			<div class="col-xs-12">
				<h2 class="banner_full-green line-20">@TempData["resultsFor"]</h2>
			</div>
		</div>
	}

	@if (Convert.ToBoolean(TempData["resultsFlag"]) && Session["distributors"] != null)
	{
		DistributorResultSet distributors = (DistributorResultSet)Session["distributors"];

		<div class="row line-40">
			<div class="col-xs-12">
				<h2 class="banner_full-green line-20">@TempData["resultsFor"]</h2>
			</div>
			<div class="col-sm-12">
				<div class="row">
					<div class="col-xs-12 col-sm-12 col-md-6 pull-right">
						@{
							var counter = 0;
							<style>
								#map {
									height: 400px;
									width: 100%;
								}
							</style>

							<div id="map"></div>
							<script>
                          function initMap() {
	 	                     var locations = [
                            @foreach (Distributor dist in distributors.Distributors)
							{
								if (dist.Lat != "" && dist.Long != "")
								{
									@:['<strong>@dist.Name</strong><br>@dist.Address<br>', @dist.Lat, @dist.Long, 0],
								}
                            }
                            ];
	                        var map = new google.maps.Map(document.getElementById('map'), {
		                        zoom: @(Convert.ToInt32(TempData["mapZoom"])),
                                center: new google.maps.LatLng(@distributors.Distributors[0].Lat, @distributors.Distributors[0].Long),
                                mapTypeId: google.maps.MapTypeId.ROADMAP
                            });
                            var infowindow = new google.maps.InfoWindow({});
                                var marker, i;
                                var icon = {
                                    url: "/images/distributor_pin_blank.png",
                                    scaledSize: new google.maps.Size(30, 40),
                                    labelOrigin: new google.maps.Point(15, 15)
                                };
                            for (i = 0; i < locations.length; i++) {
                                marker = new google.maps.Marker({
                                    position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                                    icon: icon,
                                    label: {
                                        text: (i + 1).toString(),
                                        color: '#54B948',
                                        fontWeight: 'bold',
                                        fontSize: '14px',
                                        origin: { x: 0, y: -3.5 }
                                    },
                                    map: map
                                });
                                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                                    return function () {
                                        infowindow.setContent(locations[i][0]);
                                        infowindow.open(map, marker);
                                    }
                                })(marker, i));
                            }
                            }
							</script>
							<script async defer
									src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCm2pyGudIAntgFCYzlWJXh4DjH4DSwymg&callback=initMap">
							</script>
						}
					</div>
					<div class="col-xs-12 col-sm-12 col-md-6 pull-left">
						<table class="width-full distributor_results">
							@foreach (Distributor distributor in distributors.Distributors)
							{

								<tr class="State @distributor.StateValue row">
									@if (distributor.MarkerId != 0)
									{
									<td>
										<div style="position: relative;  text-align: center;color:green;">
											<img class="pin" src="/images/distributor_pin_blank.png">
											<div style="position: absolute;  top: 35%;  left: 50%; transform: translate(-50%, -50%); font-weight:bold; color:#54B948; font-size:14px">@distributor.MarkerId</div>
										</div>
									</td>
									}
									else
									{
										<td></td>
									}
									<td>
										<h4 class="type-m-green remove_top-marg">@Html.Raw(distributor.Name)</h4>
										 <p>@distributor.Address</p>
										@if (distributor.City != "" && distributor.State != "" && distributor.Zip != "")
										{
											<p class="city">@distributor.City, @distributor.State @distributor.Zip</p>@*<p class="zip">@distributor.Zip</p>*@
										}
										else if (distributor.City != "" && distributor.State != "" && distributor.Zip == "")
										{
											<p class="city">@distributor.City, @distributor.State</p>
										}
										else if (distributor.City == "" && distributor.State != "" && distributor.Zip != "")
										{
											<p class="city">@distributor.State @distributor.Zip</p>
										}
										else if (distributor.City == "" && distributor.State == "" && distributor.Zip != "")
										{
											<p class="city">@distributor.Zip</p>
										}
										else if (distributor.City != "" && distributor.State == "" && distributor.Zip != "")
										{
											<p class="city">@distributor.City @distributor.Zip</p>
										}
										else if (distributor.City == "" && distributor.State != "" && distributor.Zip == "")
										{
											<p class="city">@distributor.State</p>
										}
										else if (distributor.City != "" && distributor.State == "" && distributor.Zip == "")
										{
											<p class="city">@distributor.City</p>
										}
										@if (distributor.Phone != "")
										{
											<p>@(CurrentPage.GetProperty("phoneTextOverride") != null ? CurrentPage.GetProperty("phoneTextOverride").ToString() : "Phone"): <a href="tel:@distributor.Phone">@distributor.Phone</a></p>
										}
										@if (distributor.Fax != "")
										{
											<p>@(CurrentPage.GetProperty("faxTextOverride") != null ? CurrentPage.GetProperty("faxTextOverride").ToString() : "Fax"): <a href="tel:@distributor.Fax">@distributor.Fax</a></p>
										}
										@if (distributor.Website != "")
										{
											<a href="@distributor.Website" target="_blank" class="link_orange-arrow">@(CurrentPage.GetProperty("visitWebsiteTextOverride") != null ? CurrentPage.GetProperty("visitWebsiteTextOverride").ToString() : "Visit Website")</a>
										}
									</td>
									<td>
										@if (distributor.Distance != "undefined")
										{
											<p class="right line-20 clearfix">@distributor.Distance @(CurrentPage.GetProperty("milesAwayTextOverride") != null ? CurrentPage.GetProperty("milesAwayTextOverride").ToString() : "miles away")</p>
										}
										@*<ul>
												<li><img class="logo" src="/images/logo_euclid.png"></li>
											</ul>*@
									</td>
								</tr> 
							}
						</table>
					</div>
				</div>
			</div>
		</div>
	}
	
	
	
	<script>
		$('#selectDiv1').click(function () {
		    $("#ZipCode").val("");
		});
	</script> 
